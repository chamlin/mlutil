clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::AppKeepAliveTask::run();svc::Socket::wait(unsignedint)const;svc::Socket::_wait(unsignedint,bool,bool,charconst*)const;poll 1
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::XDQPServerSession::run();xdmp::XDQPServerSession::replicateRecoveryOp(xdmp::XDQPServerRequest&);xdmp::HBInfo::encode(svc::Encoder&)const 1
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::XDBCKeepAliveTask::run();svc::Socket::wait(unsignedint)const;svc::Socket::_wait(unsignedint,bool,bool,charconst*)const;poll 23
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();svc::Semaphore::wait(bool)const;sem_wait 705
clone;start_thread;runThread;svc::Thread::top();xdmp::JournalConsumer::consumerThread();svc::Semaphore::wait(bool)const;sem_wait 16
clone;start_thread;runThread;svc::Thread::top();xdmp::XDQPClientConnectionThread::run();xdmp::XDQPClientConnection::run(xdmp::XDQPClientListener&);xdmp::XDQPClientConnection::recv(xdmp::XDQPClientListenerconst&,std::vector<unsignedint,std::allocator<unsignedint>>&,long*);svc::Sockbuf::xsgetn(char*,long);svc::Sockbuf::underflow();svc::Socket::recv(char*,char*,unsignedint);svc::Socket::_wait(unsignedint,bool,bool,charconst*)const;poll 876
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::HeartbeatTask::run();xdmp::XDQPHost::heartbeat(svc::Handle<xdmp::Heartbeat>const&);xdmp::XDQPClient::heartbeat(unsignedlong,unsignedlong,xdmp::Heartbeatconst&);xdmp::XDQPClientListener::send(std::vector<unsignedint,std::allocator<unsignedint>>&,unsignedlong,unsignedlong,long,bool);xdmp::XDQPClientConnection::send(xdmp::XDQPClientListenerconst&,charconst*,charconst*,bool);xdmp::XDQPClientConnection::_send(xdmp::XDQPClientListenerconst&,charconst*,charconst*);xdmp::XDQPClientConnection::connect(xdmp::XDQPClientListenerconst&);svc::Socket::connect(sockaddr_inconst&,unsignedint);svc::Socket::_wait(unsignedint,bool,bool,charconst*)const;poll 3
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::ForeignForestJournalConsumer::fastQueryTimestampTask()const;xdmp::XDQPClientVoidFuture::_finish();xdmp::XDQPClientListener::finish(xdmp::XDQPClientResponse&,svc::Decoder&);svc::Semaphore::wait(bool)const;sem_wait 4
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::PerfMeterTask::run();xdmp::PerfMeterTask::forestStatus(xdmp::LDHEnv&,std::vector<svc::Handle<xdmp::MeterDocument>,std::allocator<svc::Handle<xdmp::MeterDocument>>>&);xdmp::Stand::getDeletedFragmentCount(unsignedlong)const 1
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::XDBCRequestTask::run();xdmp::XDBCRequestTask::handleRequest(svc::Handle<xdmp::XDBCRequest>&);xdmp::XDBCRequestTask::handleInvoke(xdmp::DynamicEnv&,svc::Handle<xdmp::StaticEnv>const&,svc::Handle<xdmp::XDBCRequest>&,bool,xdmp::Dialect);xdmp::Program::eval(xdmp::LocationInfoconst&,xdmp::DynamicEnv&,svc::Handle<xdmp::StaticEnv>const&,svc::Handle<xdmp::XSLTEnv>const&,charconst*,bool,bool,std::vector<svc::Handle<xdmp::Result>,std::allocator<svc::Handle<xdmp::Result>>>*)const;xdmp::Statement::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::StaticEnv>const&,svc::Handle<xdmp::XSLTEnv>const&,xdmp::SPARQLEnv*,charconst*,bool)const;xdmp::Statement::_eval(xdmp::DynamicEnv&,svc::Handle<xdmp::StaticEnv>const&,svc::Handle<xdmp::XSLTEnv>const&,xdmp::SPARQLEnv*,xdmp::Bool&)const;xdmp::MainModule::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::StatementExpr::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::FunctionTailCall::evalTail(xdmp::DynamicEnv&,xdmp::ValueAccumulator&,svc::Handle<xdmp::TailCall>&);xdmp::FLWORExpr::evalTail(xdmp::DynamicEnv&,xdmp::ValueAccumulator&,svc::Handle<xdmp::TailCall>&)const;xdmp::LetClause::flworEval(xdmp::FLWOREnv&,xdmp::FLWORExprconst&,unsignedlong)const;xdmp::LetClause::flworEval(xdmp::FLWOREnv&,xdmp::FLWORExprconst&,unsignedlong)const;xdmp::LetClause::flworEval(xdmp::FLWOREnv&,xdmp::FLWORExprconst&,unsignedlong)const;xdmp::LetClause::flworEval(xdmp::FLWOREnv&,xdmp::FLWORExprconst&,unsignedlong)const;xdmp::FunctionCall::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::FunctionTailCall::evalTail(xdmp::DynamicEnv&,xdmp::ValueAccumulator&,svc::Handle<xdmp::TailCall>&);xdmp::TryCatchExpr::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::Expr::evalCompletely(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::FunctionCall::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::FLWORExpr::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::LetClause::flworEval(xdmp::FLWOREnv&,xdmp::FLWORExprconst&,unsignedlong)const;xdmp::LetClause::flworEval(xdmp::FLWOREnv&,xdmp::FLWORExprconst&,unsignedlong)const;xdmp::PathExpr::eval(xdmp::DynamicEnv&,svc::Handle<xdmp::Value>&)const;xdmp::PathExpr::_eval(xdmp::DynamicEnv&,std::vector<svc::Handle<xdmp::StepExpr>,std::allocator<svc::Handle<xdmp::StepExpr>>>const&,svc::Handle<xdmp::Value>&)const;xdmp::DatabaseEvalFuture::_finish();xdmp::XDQPClientLocatorIteratorFuture::_finish();xdmp::XDQPClientListener::finish(xdmp::XDQPClientResponse&,svc::Decoder&);svc::Semaphore::wait(bool)const;sem_wait 1
clone;start_thread;runThread;svc::Thread::top();xdmp::XDBCServerThread::run();svc::Socket::accept(sockaddr_in&);accept 76
clone;start_thread;runThread;svc::Thread::top();xdmp::ForeignForestJournalConsumer::futureFinisherThread();svc::Semaphore::wait(bool)const;sem_wait 16
clone;start_thread;runThread;svc::Thread::top();xdmp::AppServerThread::run();svc::Socket::accept(sockaddr_in&);accept 52
clone;start_thread;runThread;svc::Thread::top();xdmp::XDQPServerConnectionThread::run();xdmp::XDQPServerConnection::run();xdmp::XDQPServerConnection::recv(xdmp::XDQPServerListenerconst&,std::vector<unsignedint,std::allocator<unsignedint>>&);svc::Sockbuf::xsgetn(char*,long);svc::Sockbuf::underflow();svc::Socket::recv(char*,char*,unsignedint);svc::Socket::_wait(unsignedint,bool,bool,charconst*)const;poll 875
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::Forest::fastQueryTimestampJournalTaskRun(unsignedlong);xdmp::RecoveryManager::record(xdmp::Forest&,svc::Handle<xdmp::RecoveryOp>&,bool,bool,bool,bool);xdmp::RecoveryManager::_record(xdmp::Forest&,svc::Handle<xdmp::RecoveryOp>&,bool,bool,bool,bool,svc::PrioritySemtexSection&);xdmp::RecoveryManager::finishReplicaFutures(xdmp::Forest&,xdmp::RecoveryOp&,std::vector<svc::Handle<xdmp::Future<xdmp::HBInfo>>,std::allocator<svc::Handle<xdmp::Future<xdmp::HBInfo>>>>&,std::vector<unsignedlong,std::allocator<unsignedlong>>&);xdmp::XDQPClientFuture<xdmp::HBInfo,xdmp::EncodeTraits<xdmp::HBInfo>,xdmp::Future<xdmp::HBInfo>>::_finish();xdmp::XDQPClientListener::finish(xdmp::XDQPClientResponse&,svc::Decoder&);svc::Semaphore::wait(bool)const;sem_wait 1
clone;start_thread;runThread;svc::Thread::top();svc::StarterThread::run();svc::Semaphore::wait(bool)const;sem_wait 4
_start;__libc_start_main;xdmp::daemon(int,charconst**);xdmp::run();xdmp::Server::backgroundLoop();svc::Thread::sleep(unsignedint);nanosleep 4
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::XDQPServerSession::run();ctl_byname;thread_tcache_flush_ctl;tcache_destroy;tcache_bin_flush_small 1
clone;start_thread;runThread;svc::Thread::top();xdmp::XDQPServerConnectionThread::run();xdmp::XDQPServerConnection::run();xdmp::XDQPServerRequest::XDQPServerRequest(xdmp::XDQPServerListenerconst*,std::vector<unsignedint,std::allocator<unsignedint>>&);xdmp::decodeTimestamps 1
clone;start_thread;runThread;svc::Thread::top();svc::PooledThread::run();xdmp::XDQPServerSession::run();xdmp::XDQPServerSession::eval(xdmp::XDQPServerRequest&);xdmp::DatabaseEvalFuture::_finish();xdmp::DocumentOrderLocatorIteratorFuture::_finish();xdmp::DocumentOrderLocatorIterator::DocumentOrderLocatorIterator(std::vector<svc::Handle<xdmp::StandResultVectorFuture>,std::allocator<svc::Handle<xdmp::StandResultVectorFuture>>>const&);xdmp::ConcurrentStandResultVectorFuture::_finish();svc::Semaphore::wait(bool)const;sem_wait 1
clone;start_thread;runThread;svc::Thread::top();xdmp::XDQPServerThread::run();svc::Socket::accept(sockaddr_in&);accept 8
clone;start_thread;runThread;svc::Thread::top();xdmp::ClusterManager::clusterThread();svc::Thread::sleep(unsignedint);nanosleep 4
