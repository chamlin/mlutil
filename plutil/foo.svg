<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="626" onload="init(evt)" viewBox="0 0 1200 626" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) { 
		details = document.getElementById("details").firstChild; 
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
		
		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}
		
		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;
		
		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) { 
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}
		
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) { 
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;
		
		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;
		
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";
		
		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";
		
		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}	

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="626.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="609" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="609" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Forest::fastQueryTimestampJournalTaskRun(unsignedlong) (1 samples, 1.11%)</title><rect x="128.0" y="481" width="13.1" height="15.0" fill="rgb(250,205,52)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::accept(sockaddr_in&amp;) (8 samples, 8.89%)</title><rect x="1085.1" y="481" width="104.9" height="15.0" fill="rgb(250,222,33)" rx="2" ry="2" />
<text text-anchor="" x="1088.11" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::Socket:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::ConcurrentStandResultVectorFuture::_finish() (1 samples, 1.11%)</title><rect x="521.3" y="401" width="13.1" height="15.0" fill="rgb(219,39,26)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="411.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nanosleep (4 samples, 4.44%)</title><rect x="10.0" y="465" width="52.4" height="15.0" fill="rgb(237,193,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nanos..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::FunctionCall::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="257" width="13.1" height="15.0" fill="rgb(210,182,17)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::PathExpr::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="129" width="13.1" height="15.0" fill="rgb(210,107,29)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Program::eval(xdmp::LocationInfoconst&amp;,xdmp::DynamicEnv&amp;,svc::Handle(xdmp::StaticEnv)const&amp;,svc::Handle(xdmp::XSLTEnv)const&amp;,charconst*,bool,bool,std::vector(svc::Handle(xdmp::Result),std::allocator(svc::Handle(xdmp::Result)))*)const (1 samples, 1.11%)</title><rect x="495.1" y="433" width="13.1" height="15.0" fill="rgb(219,67,10)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (1 samples, 1.11%)</title><rect x="495.1" y="33" width="13.1" height="15.0" fill="rgb(209,203,30)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (16 samples, 17.78%)</title><rect x="652.4" y="481" width="209.8" height="15.0" fill="rgb(229,104,43)" rx="2" ry="2" />
<text text-anchor="" x="655.44" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::Semaphore::wait(bool)c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::DocumentOrderLocatorIterator::DocumentOrderLocatorIterator(std::vector(svc::Handle(xdmp::StandResultVectorFuture),std::allocator(svc::Handle(xdmp::StandResultVectorFuture)))const&amp;) (1 samples, 1.11%)</title><rect x="521.3" y="417" width="13.1" height="15.0" fill="rgb(254,152,54)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="427.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::PerfMeterTask::forestStatus(xdmp::LDHEnv&amp;,std::vector(svc::Handle(xdmp::MeterDocument),std::allocator(svc::Handle(xdmp::MeterDocument)))&amp;) (1 samples, 1.11%)</title><rect x="180.4" y="465" width="13.2" height="15.0" fill="rgb(246,216,52)" rx="2" ry="2" />
<text text-anchor="" x="183.44" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::MainModule::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="385" width="13.1" height="15.0" fill="rgb(245,168,4)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="395.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::PooledThread::run() (37 samples, 41.11%)</title><rect x="62.4" y="497" width="485.2" height="15.0" fill="rgb(206,61,7)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::PooledThread::run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tcache_bin_flush_small (1 samples, 1.11%)</title><rect x="508.2" y="417" width="13.1" height="15.0" fill="rgb(241,133,38)" rx="2" ry="2" />
<text text-anchor="" x="511.22" y="427.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (1 samples, 1.11%)</title><rect x="521.3" y="385" width="13.1" height="15.0" fill="rgb(234,184,43)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="395.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Statement::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::StaticEnv)const&amp;,svc::Handle(xdmp::XSLTEnv)const&amp;,xdmp::SPARQLEnv*,charconst*,bool)const (1 samples, 1.11%)</title><rect x="495.1" y="417" width="13.1" height="15.0" fill="rgb(251,221,49)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="427.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>accept (8 samples, 8.89%)</title><rect x="1085.1" y="465" width="104.9" height="15.0" fill="rgb(224,78,11)" rx="2" ry="2" />
<text text-anchor="" x="1088.11" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >accept</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::PerfMeterTask::run() (1 samples, 1.11%)</title><rect x="180.4" y="481" width="13.2" height="15.0" fill="rgb(240,160,4)" rx="2" ry="2" />
<text text-anchor="" x="183.44" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Server::backgroundLoop() (4 samples, 4.44%)</title><rect x="10.0" y="497" width="52.4" height="15.0" fill="rgb(245,182,11)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::RecoveryManager::finishReplicaFutures(xdmp::Forest&amp;,xdmp::RecoveryOp&amp;,std::vector(svc::Handle(xdmp::Future(xdmp::HBInfo)),std::allocator(svc::Handle(xdmp::Future(xdmp::HBInfo))))&amp;,std::vector(unsignedlong,std::allocator(unsignedlong))&amp;) (1 samples, 1.11%)</title><rect x="128.0" y="433" width="13.1" height="15.0" fill="rgb(238,111,13)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (16 samples, 17.78%)</title><rect x="862.2" y="465" width="209.8" height="15.0" fill="rgb(239,188,28)" rx="2" ry="2" />
<text text-anchor="" x="865.22" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sem_wait</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::daemon(int,charconst**) (4 samples, 4.44%)</title><rect x="10.0" y="529" width="52.4" height="15.0" fill="rgb(226,191,22)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="539.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::FunctionTailCall::evalTail(xdmp::DynamicEnv&amp;,xdmp::ValueAccumulator&amp;,svc::Handle(xdmp::TailCall)&amp;) (1 samples, 1.11%)</title><rect x="495.1" y="241" width="13.1" height="15.0" fill="rgb(222,119,13)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientConnection::connect(xdmp::XDQPClientListenerconst&amp;) (3 samples, 3.33%)</title><rect x="141.1" y="385" width="39.3" height="15.0" fill="rgb(240,207,34)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="395.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerThread::run() (8 samples, 8.89%)</title><rect x="1085.1" y="497" width="104.9" height="15.0" fill="rgb(226,97,50)" rx="2" ry="2" />
<text text-anchor="" x="1088.11" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp::XDQPSe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::FunctionTailCall::evalTail(xdmp::DynamicEnv&amp;,xdmp::ValueAccumulator&amp;,svc::Handle(xdmp::TailCall)&amp;) (1 samples, 1.11%)</title><rect x="495.1" y="353" width="13.1" height="15.0" fill="rgb(213,207,47)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (4 samples, 4.44%)</title><rect x="10.0" y="545" width="52.4" height="15.0" fill="rgb(232,113,19)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="555.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__lib..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (1 samples, 1.11%)</title><rect x="521.3" y="369" width="13.1" height="15.0" fill="rgb(226,109,20)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDBCKeepAliveTask::run() (23 samples, 25.56%)</title><rect x="193.6" y="481" width="301.5" height="15.0" fill="rgb(212,29,40)" rx="2" ry="2" />
<text text-anchor="" x="196.56" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp::XDBCKeepAliveTask::run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDBCRequestTask::run() (1 samples, 1.11%)</title><rect x="495.1" y="481" width="13.1" height="15.0" fill="rgb(225,188,35)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::HeartbeatTask::run() (3 samples, 3.33%)</title><rect x="141.1" y="481" width="39.3" height="15.0" fill="rgb(216,65,8)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::StatementExpr::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="369" width="13.1" height="15.0" fill="rgb(240,162,35)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClient::heartbeat(unsignedlong,unsignedlong,xdmp::Heartbeatconst&amp;) (3 samples, 3.33%)</title><rect x="141.1" y="449" width="39.3" height="15.0" fill="rgb(245,222,4)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientConnection::send(xdmp::XDQPClientListenerconst&amp;,charconst*,charconst*,bool) (3 samples, 3.33%)</title><rect x="141.1" y="417" width="39.3" height="15.0" fill="rgb(234,173,5)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="427.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (4 samples, 4.44%)</title><rect x="75.6" y="417" width="52.4" height="15.0" fill="rgb(222,144,17)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="427.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sem_w..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerConnection::run() (1 samples, 1.11%)</title><rect x="1072.0" y="481" width="13.1" height="15.0" fill="rgb(250,167,46)" rx="2" ry="2" />
<text text-anchor="" x="1075.00" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tcache_destroy (1 samples, 1.11%)</title><rect x="508.2" y="433" width="13.1" height="15.0" fill="rgb(216,2,5)" rx="2" ry="2" />
<text text-anchor="" x="511.22" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Expr::evalCompletely(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="209" width="13.1" height="15.0" fill="rgb(211,54,52)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Thread::sleep(unsignedint) (4 samples, 4.44%)</title><rect x="10.0" y="481" width="52.4" height="15.0" fill="rgb(213,96,48)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (4 samples, 4.44%)</title><rect x="10.0" y="561" width="52.4" height="15.0" fill="rgb(213,180,48)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="571.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::ForeignForestJournalConsumer::fastQueryTimestampTask()const (4 samples, 4.44%)</title><rect x="75.6" y="481" width="52.4" height="15.0" fill="rgb(242,55,28)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientConnection::_send(xdmp::XDQPClientListenerconst&amp;,charconst*,charconst*) (3 samples, 3.33%)</title><rect x="141.1" y="401" width="39.3" height="15.0" fill="rgb(225,122,39)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="411.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::run() (4 samples, 4.44%)</title><rect x="10.0" y="513" width="52.4" height="15.0" fill="rgb(210,211,39)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="523.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerSession::run() (3 samples, 3.33%)</title><rect x="508.2" y="481" width="39.4" height="15.0" fill="rgb(210,157,8)" rx="2" ry="2" />
<text text-anchor="" x="511.22" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::LetClause::flworEval(xdmp::FLWOREnv&amp;,xdmp::FLWORExprconst&amp;,unsignedlong)const (1 samples, 1.11%)</title><rect x="495.1" y="305" width="13.1" height="15.0" fill="rgb(235,221,49)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::LetClause::flworEval(xdmp::FLWOREnv&amp;,xdmp::FLWORExprconst&amp;,unsignedlong)const (1 samples, 1.11%)</title><rect x="495.1" y="145" width="13.1" height="15.0" fill="rgb(215,20,37)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (4 samples, 4.44%)</title><rect x="547.6" y="465" width="52.4" height="15.0" fill="rgb(238,13,5)" rx="2" ry="2" />
<text text-anchor="" x="550.56" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sem_w..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Thread::top() (86 samples, 95.56%)</title><rect x="62.4" y="513" width="1127.6" height="15.0" fill="rgb(224,107,48)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="523.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::Thread::top()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientFuture(xdmp::HBInfo,xdmp::EncodeTraits(xdmp::HBInfo),xdmp::Future(xdmp::HBInfo))::_finish() (1 samples, 1.11%)</title><rect x="128.0" y="417" width="13.1" height="15.0" fill="rgb(213,132,7)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="427.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (4 samples, 4.44%)</title><rect x="547.6" y="481" width="52.4" height="15.0" fill="rgb(219,177,43)" rx="2" ry="2" />
<text text-anchor="" x="550.56" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::TryCatchExpr::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="225" width="13.1" height="15.0" fill="rgb(230,6,54)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Statement::_eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::StaticEnv)const&amp;,svc::Handle(xdmp::XSLTEnv)const&amp;,xdmp::SPARQLEnv*,xdmp::Bool&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="401" width="13.1" height="15.0" fill="rgb(216,203,27)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="411.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ctl_byname (1 samples, 1.11%)</title><rect x="508.2" y="465" width="13.1" height="15.0" fill="rgb(230,182,54)" rx="2" ry="2" />
<text text-anchor="" x="511.22" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (1 samples, 1.11%)</title><rect x="495.1" y="49" width="13.1" height="15.0" fill="rgb(220,48,32)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::DatabaseEvalFuture::_finish() (1 samples, 1.11%)</title><rect x="521.3" y="449" width="13.1" height="15.0" fill="rgb(233,194,25)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::decodeTimestamps (1 samples, 1.11%)</title><rect x="1072.0" y="449" width="13.1" height="15.0" fill="rgb(237,24,37)" rx="2" ry="2" />
<text text-anchor="" x="1075.00" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::FLWORExpr::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="177" width="13.1" height="15.0" fill="rgb(229,102,14)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::RecoveryManager::_record(xdmp::Forest&amp;,svc::Handle(xdmp::RecoveryOp)&amp;,bool,bool,bool,bool,svc::PrioritySemtexSection&amp;) (1 samples, 1.11%)</title><rect x="128.0" y="449" width="13.1" height="15.0" fill="rgb(228,164,26)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::JournalConsumer::consumerThread() (16 samples, 17.78%)</title><rect x="862.2" y="497" width="209.8" height="15.0" fill="rgb(217,20,19)" rx="2" ry="2" />
<text text-anchor="" x="865.22" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp::JournalConsumer::cons..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (1 samples, 1.11%)</title><rect x="128.0" y="369" width="13.1" height="15.0" fill="rgb(234,193,19)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::ForeignForestJournalConsumer::futureFinisherThread() (16 samples, 17.78%)</title><rect x="652.4" y="497" width="209.8" height="15.0" fill="rgb(254,188,30)" rx="2" ry="2" />
<text text-anchor="" x="655.44" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp::ForeignForestJournalC..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runThread (86 samples, 95.56%)</title><rect x="62.4" y="529" width="1127.6" height="15.0" fill="rgb(254,164,51)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="539.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runThread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (4 samples, 4.44%)</title><rect x="75.6" y="433" width="52.4" height="15.0" fill="rgb(247,165,48)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (16 samples, 17.78%)</title><rect x="862.2" y="481" width="209.8" height="15.0" fill="rgb(232,184,2)" rx="2" ry="2" />
<text text-anchor="" x="865.22" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::Semaphore::wait(bool)c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDBCRequestTask::handleRequest(svc::Handle(xdmp::XDBCRequest)&amp;) (1 samples, 1.11%)</title><rect x="495.1" y="465" width="13.1" height="15.0" fill="rgb(243,21,6)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::DatabaseEvalFuture::_finish() (1 samples, 1.11%)</title><rect x="495.1" y="97" width="13.1" height="15.0" fill="rgb(228,130,2)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientVoidFuture::_finish() (4 samples, 4.44%)</title><rect x="75.6" y="465" width="52.4" height="15.0" fill="rgb(223,137,11)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Thread::sleep(unsignedint) (4 samples, 4.44%)</title><rect x="600.0" y="481" width="52.4" height="15.0" fill="rgb(248,214,33)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientLocatorIteratorFuture::_finish() (1 samples, 1.11%)</title><rect x="495.1" y="81" width="13.1" height="15.0" fill="rgb(206,127,42)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDBCRequestTask::handleInvoke(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::StaticEnv)const&amp;,svc::Handle(xdmp::XDBCRequest)&amp;,bool,xdmp::Dialect) (1 samples, 1.11%)</title><rect x="495.1" y="449" width="13.1" height="15.0" fill="rgb(232,198,6)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientListener::finish(xdmp::XDQPClientResponse&amp;,svc::Decoder&amp;) (1 samples, 1.11%)</title><rect x="495.1" y="65" width="13.1" height="15.0" fill="rgb(247,108,42)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::connect(sockaddr_inconst&amp;,unsignedint) (3 samples, 3.33%)</title><rect x="141.1" y="369" width="39.3" height="15.0" fill="rgb(235,55,49)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (90 samples, 100%)</title><rect x="10.0" y="577" width="1180.0" height="15.0" fill="rgb(225,23,1)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="587.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::LetClause::flworEval(xdmp::FLWOREnv&amp;,xdmp::FLWORExprconst&amp;,unsignedlong)const (1 samples, 1.11%)</title><rect x="495.1" y="289" width="13.1" height="15.0" fill="rgb(240,41,51)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::FunctionCall::eval(xdmp::DynamicEnv&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="193" width="13.1" height="15.0" fill="rgb(210,21,13)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientListener::send(std::vector(unsignedint,std::allocator(unsignedint))&amp;,unsignedlong,unsignedlong,long,bool) (3 samples, 3.33%)</title><rect x="141.1" y="433" width="39.3" height="15.0" fill="rgb(252,189,0)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::StarterThread::run() (4 samples, 4.44%)</title><rect x="547.6" y="497" width="52.4" height="15.0" fill="rgb(208,155,46)" rx="2" ry="2" />
<text text-anchor="" x="550.56" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerConnectionThread::run() (1 samples, 1.11%)</title><rect x="1072.0" y="497" width="13.1" height="15.0" fill="rgb(206,125,39)" rx="2" ry="2" />
<text text-anchor="" x="1075.00" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::wait(unsignedint)const (23 samples, 25.56%)</title><rect x="193.6" y="465" width="301.5" height="15.0" fill="rgb(214,143,23)" rx="2" ry="2" />
<text text-anchor="" x="196.56" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::Socket::wait(unsignedint)const</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (86 samples, 95.56%)</title><rect x="62.4" y="545" width="1127.6" height="15.0" fill="rgb(238,215,48)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="555.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::LetClause::flworEval(xdmp::FLWOREnv&amp;,xdmp::FLWORExprconst&amp;,unsignedlong)const (1 samples, 1.11%)</title><rect x="495.1" y="273" width="13.1" height="15.0" fill="rgb(212,144,44)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Semaphore::wait(bool)const (1 samples, 1.11%)</title><rect x="128.0" y="385" width="13.1" height="15.0" fill="rgb(223,200,49)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="395.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::PathExpr::_eval(xdmp::DynamicEnv&amp;,std::vector(svc::Handle(xdmp::StepExpr),std::allocator(svc::Handle(xdmp::StepExpr)))const&amp;,svc::Handle(xdmp::Value)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="113" width="13.1" height="15.0" fill="rgb(224,109,35)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::HBInfo::encode(svc::Encoder&amp;)const (1 samples, 1.11%)</title><rect x="534.4" y="449" width="13.2" height="15.0" fill="rgb(247,9,47)" rx="2" ry="2" />
<text text-anchor="" x="537.44" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::Stand::getDeletedFragmentCount(unsignedlong)const (1 samples, 1.11%)</title><rect x="180.4" y="449" width="13.2" height="15.0" fill="rgb(222,220,39)" rx="2" ry="2" />
<text text-anchor="" x="183.44" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPHost::heartbeat(svc::Handle(xdmp::Heartbeat)const&amp;) (3 samples, 3.33%)</title><rect x="141.1" y="465" width="39.3" height="15.0" fill="rgb(249,178,41)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>poll (23 samples, 25.56%)</title><rect x="193.6" y="433" width="301.5" height="15.0" fill="rgb(248,85,12)" rx="2" ry="2" />
<text text-anchor="" x="196.56" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >poll</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::FLWORExpr::evalTail(xdmp::DynamicEnv&amp;,xdmp::ValueAccumulator&amp;,svc::Handle(xdmp::TailCall)&amp;)const (1 samples, 1.11%)</title><rect x="495.1" y="337" width="13.1" height="15.0" fill="rgb(246,75,32)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::RecoveryManager::record(xdmp::Forest&amp;,svc::Handle(xdmp::RecoveryOp)&amp;,bool,bool,bool,bool) (1 samples, 1.11%)</title><rect x="128.0" y="465" width="13.1" height="15.0" fill="rgb(231,105,46)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::ClusterManager::clusterThread() (4 samples, 4.44%)</title><rect x="600.0" y="497" width="52.4" height="15.0" fill="rgb(210,59,13)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="507.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerRequest::XDQPServerRequest(xdmp::XDQPServerListenerconst*,std::vector(unsignedint,std::allocator(unsignedint))&amp;) (1 samples, 1.11%)</title><rect x="1072.0" y="465" width="13.1" height="15.0" fill="rgb(239,119,23)" rx="2" ry="2" />
<text text-anchor="" x="1075.00" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientListener::finish(xdmp::XDQPClientResponse&amp;,svc::Decoder&amp;) (1 samples, 1.11%)</title><rect x="128.0" y="401" width="13.1" height="15.0" fill="rgb(216,204,20)" rx="2" ry="2" />
<text text-anchor="" x="131.00" y="411.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>thread_tcache_flush_ctl (1 samples, 1.11%)</title><rect x="508.2" y="449" width="13.1" height="15.0" fill="rgb(229,22,39)" rx="2" ry="2" />
<text text-anchor="" x="511.22" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clone (86 samples, 95.56%)</title><rect x="62.4" y="561" width="1127.6" height="15.0" fill="rgb(222,106,17)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="571.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clone</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPClientListener::finish(xdmp::XDQPClientResponse&amp;,svc::Decoder&amp;) (4 samples, 4.44%)</title><rect x="75.6" y="449" width="52.4" height="15.0" fill="rgb(248,200,18)" rx="2" ry="2" />
<text text-anchor="" x="78.56" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xdmp:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>poll (1 samples, 1.11%)</title><rect x="62.4" y="433" width="13.2" height="15.0" fill="rgb(232,162,21)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::wait(unsignedint)const (1 samples, 1.11%)</title><rect x="62.4" y="465" width="13.2" height="15.0" fill="rgb(209,167,14)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::_wait(unsignedint,bool,bool,charconst*)const (23 samples, 25.56%)</title><rect x="193.6" y="449" width="301.5" height="15.0" fill="rgb(225,59,26)" rx="2" ry="2" />
<text text-anchor="" x="196.56" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc::Socket::_wait(unsignedint,bool,bool..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::DocumentOrderLocatorIteratorFuture::_finish() (1 samples, 1.11%)</title><rect x="521.3" y="433" width="13.1" height="15.0" fill="rgb(225,112,43)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="443.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sem_wait (16 samples, 17.78%)</title><rect x="652.4" y="465" width="209.8" height="15.0" fill="rgb(228,102,7)" rx="2" ry="2" />
<text text-anchor="" x="655.44" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sem_wait</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerSession::replicateRecoveryOp(xdmp::XDQPServerRequest&amp;) (1 samples, 1.11%)</title><rect x="534.4" y="465" width="13.2" height="15.0" fill="rgb(248,161,7)" rx="2" ry="2" />
<text text-anchor="" x="537.44" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::LetClause::flworEval(xdmp::FLWOREnv&amp;,xdmp::FLWORExprconst&amp;,unsignedlong)const (1 samples, 1.11%)</title><rect x="495.1" y="161" width="13.1" height="15.0" fill="rgb(242,8,8)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nanosleep (4 samples, 4.44%)</title><rect x="600.0" y="465" width="52.4" height="15.0" fill="rgb(228,91,38)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nanos..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::AppKeepAliveTask::run() (1 samples, 1.11%)</title><rect x="62.4" y="481" width="13.2" height="15.0" fill="rgb(247,175,48)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="491.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::XDQPServerSession::eval(xdmp::XDQPServerRequest&amp;) (1 samples, 1.11%)</title><rect x="521.3" y="465" width="13.1" height="15.0" fill="rgb(213,225,36)" rx="2" ry="2" />
<text text-anchor="" x="524.33" y="475.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::_wait(unsignedint,bool,bool,charconst*)const (3 samples, 3.33%)</title><rect x="141.1" y="353" width="39.3" height="15.0" fill="rgb(207,144,17)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >svc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>svc::Socket::_wait(unsignedint,bool,bool,charconst*)const (1 samples, 1.11%)</title><rect x="62.4" y="449" width="13.2" height="15.0" fill="rgb(210,85,41)" rx="2" ry="2" />
<text text-anchor="" x="65.44" y="459.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>poll (3 samples, 3.33%)</title><rect x="141.1" y="337" width="39.3" height="15.0" fill="rgb(236,209,28)" rx="2" ry="2" />
<text text-anchor="" x="144.11" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >poll</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xdmp::LetClause::flworEval(xdmp::FLWOREnv&amp;,xdmp::FLWORExprconst&amp;,unsignedlong)const (1 samples, 1.11%)</title><rect x="495.1" y="321" width="13.1" height="15.0" fill="rgb(229,107,53)" rx="2" ry="2" />
<text text-anchor="" x="498.11" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
